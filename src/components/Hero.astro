---
interface Props {
  data: {
    id: string;
    type: string;
    collection: string;
    data: {
      sectionMeta: {
        heading: string;
        headingHighlight: string;
        description: string;
        heroImage?: string;
        backgroundVideo?: string;
      };
      items: {
        primaryButton?: {
          text: string;
          href: string;
        };
        secondaryButton?: {
          text: string;
          href: string;
        };
        brands?: {
          title: string;
          items: Array<{
            name: string;
            image: string;
            href: string;
          }>;
        };
      };
    };
  };
}

const { data } = Astro.props;
const { sectionMeta, items = {} } = data.data;
const { primaryButton, secondaryButton, brands } = items;
---

<div class="relative min-h-screen bg-dark overflow-hidden">
  <!-- Video Background -->
  {sectionMeta.backgroundVideo && (
    <div class="absolute inset-0 z-0">
      <div class="absolute inset-0 bg-gradient-to-b from-dark/80 to-dark/40 z-10"></div>
      <video
        autoplay
        loop
        muted
        playsinline
        class="absolute inset-0 w-full h-full object-cover"
      >
        <source src={sectionMeta.backgroundVideo} type="video/mp4" />
        Your browser does not support the video tag.
      </video>
    </div>
  )}

  <!-- Content -->
  <div class="container relative z-10 min-h-screen flex items-center py-20">
    <div class="flex flex-wrap -mx-4">
      <div class="w-full px-4 lg:w-5/12">
        <div class="hero-content">
          <h1 class="mb-5 text-4xl font-bold !leading-[1.208] sm:text-[42px] lg:text-[40px] xl:text-5xl text-white">
            {sectionMeta.heading}
            <span class="text-primary">{sectionMeta.headingHighlight}</span>
          </h1>
          <p class="mb-8 max-w-[480px] text-base text-gray-300">
            {sectionMeta.description}
          </p>
          <ul class="flex flex-wrap items-center">
            {primaryButton && (
              <li>
                <a
                  href={primaryButton.href}
                  class="inline-flex items-center justify-center px-6 py-4 text-base font-medium text-white transition duration-300 rounded-lg bg-primary hover:bg-primary-dark hover:shadow-lg"
                >
                  {primaryButton.text}
                </a>
              </li>
            )}
            {secondaryButton && (
              <li>
                <a
                  href={secondaryButton.href}
                  class="inline-flex items-center justify-center px-6 py-4 text-base font-medium transition duration-300 border rounded-lg text-white border-white/20 hover:bg-white/10 ml-4"
                >
                  {secondaryButton.text}
                </a>
              </li>
            )}
          </ul>
          {brands && brands.items && (
            <div class="clients pt-16">
              <h6 class="flex items-center mb-6 text-xs font-normal text-gray-400">
                {brands.title}
                <span class="ml-2 inline-block h-[1px] w-8 bg-gray-600"></span>
              </h6>
              <div class="flex items-center space-x-8">
                {brands.items.map((brand) => (
                  <a 
                    href={brand.href} 
                    class="flex w-full opacity-50 hover:opacity-100 transition-all duration-300"
                  >
                    <img 
                      src={brand.image} 
                      alt={brand.name}
                      class="h-8 w-auto brightness-0 invert"
                    />
                  </a>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
      {!sectionMeta.backgroundVideo && sectionMeta.heroImage && (
        <div class="hidden px-4 lg:block lg:w-7/12">
          <div class="lg:ml-4 lg:text-right">
            <div class="relative z-10 inline-block pt-11 lg:pt-0">
              <img
                src={sectionMeta.heroImage}
                alt="hero"
                class="max-w-full lg:ml-auto"
              />
              <span class="absolute -left-8 -bottom-8 z-[-1]">
                <svg
                  width="93"
                  height="93"
                  viewBox="0 0 93 93"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <circle cx="2.5" cy="2.5" r="2.5" fill="currentColor" class="text-primary"/>
                  <!-- ... rest of the circles ... -->
                </svg>
              </span>
            </div>
          </div>
        </div>
      )}
    </div>
  </div>
</div>

<style>
  .hero-content {
    animation: fadeIn 1s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>